import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'

export default function AuthPage() {
  const router = useRouter()

  const SUPA  = process.env.NEXT_PUBLIC_SUPABASE_URL!
  const ANON  = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
  const SITE  = process.env.NEXT_PUBLIC_SITE_URL || (typeof window!=='undefined'?window.location.origin:'')

  // tabs: –≤—Ö–æ–¥/—Ä–µ–≥/—Å–±—Ä–æ—Å
  const [tab, setTab] = useState<'signin'|'signup'|'reset'>('signin')
  const [email, setEmail] = useState('')
  const [pass, setPass] = useState('')
  const [msg,  setMsg]  = useState('')
  const [loading, setLoading] = useState(false)

  // recovery / oauth callback
  const [recoveryToken, setRecoveryToken] = useState<string | null>(null)
  const [newPass, setNewPass] = useState('')
  const [newPass2, setNewPass2] = useState('')

  // === –£—Ç–∏–ª–∏—Ç–∞ REST
  async function req(path:string, body:any) {
    const r = await fetch(`${SUPA}/auth/v1/${path}`, {
      method:'POST',
      headers:{'Content-Type':'application/json','apikey':ANON,'Authorization':`Bearer ${ANON}`},
      body:JSON.stringify(body)
    })
    return r
  }

  // === –ú–∞–ø–ø–µ—Ä –æ—à–∏–±–æ–∫ Supabase Auth -> –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
  function parseAuthError(status: number, j: any) {
    const raw = (j?.error_description || j?.message || j?.msg || "")
    const msg = String(raw)

    // –õ–û–ì–ò–ù
    if (status === 400 && /(invalid_grant|Invalid login credentials)/i.test(msg)) {
      return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å."
    }
    if (/user_not_found|No user found/i.test(msg)) {
      return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å."
    }

    // –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
    if (status === 409 || /already exists|user already registered/i.test(msg)) {
      return "‚ö†Ô∏è –¢–∞–∫–æ–π email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–∂–º–∏—Ç–µ ‚Äò–í—Ö–æ–¥‚Äô –∏–ª–∏ ‚Äò–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è‚Äô."
    }
    if (status === 422 && /password|weak|short/i.test(msg)) {
      return "üîí –ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤ (–ª—É—á—à–µ —Å–ª–æ–∂–Ω–µ–µ)."
    }

    // –î—Ä—É–≥–æ–µ
    if (status === 429 || /too many|rate/i.test(msg)) return "‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    if (status === 400 && /(Email not confirmed|email not confirmed)/i.test(msg)) return "‚úâÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É."
    return (raw || `–û—à–∏–±–∫–∞ (${status})`)
  }

  // === –ö–æ–ª–ª–±–µ–∫–∏ OAuth/Recovery
  useEffect(()=>{
    if (typeof window==='undefined') return
    const hash  = new URLSearchParams(window.location.hash.replace(/^#/, ''))
    const qs    = new URLSearchParams(window.location.search)

    const accessFromHash  = hash.get('access_token')
    const accessFromQuery = qs.get('access_token')
    const tokenHash       = qs.get('token_hash') || hash.get('token_hash')
    const type            = (hash.get('type') || qs.get('type') || '').toLowerCase()

    // OAuth –≤–æ–∑–≤—Ä–∞—Ç
    const oauthAccess = accessFromHash || accessFromQuery
    if (oauthAccess && type !== 'recovery') {
      try { localStorage.setItem('jwt', oauthAccess); router.replace('/') } catch(e){ console.error(e) }
      return
    }

    // Recovery —Å access_token
    if ((accessFromHash || accessFromQuery) && type === 'recovery') {
      try { localStorage.removeItem('jwt') } catch {}
      setRecoveryToken(accessFromHash || accessFromQuery)
      setTab('reset')
      setMsg('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ.')
      return
    }

    // Recovery —á–µ—Ä–µ–∑ token_hash -> verify
    async function exchangeTokenHash(th: string) {
      try {
        setLoading(true)
        const r = await fetch(`${SUPA}/auth/v1/verify`, {
          method: 'POST',
          headers: {'Content-Type':'application/json','apikey': ANON,'Authorization': `Bearer ${ANON}`},
          body: JSON.stringify({ type: 'recovery', token_hash: th }),
        })
        const j = await r.json().catch(()=> ({}))
        if (!r.ok) throw new Error(j.error_description || j.message || 'Verify failed')
        if (j?.access_token) {
          try { localStorage.removeItem('jwt') } catch {}
          setRecoveryToken(j.access_token)
          setTab('reset')
          setMsg('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ.')
          return
        }
        throw new Error('No access_token in verify response')
      } catch (e:any) {
        console.error('verify error', e)
        setMsg('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å—Å—ã–ª–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ' + e.message)
      } finally {
        setLoading(false)
      }
    }

    if (type === 'recovery' && tokenHash) {
      exchangeTokenHash(tokenHash)
      return
    }
  },[router, SUPA, ANON])

  // –£–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω? ‚Äî –Ω–∞ –≥–ª–∞–≤–Ω—É—é (–Ω–µ –º–µ—à–∞–µ–º recovery)
  useEffect(()=>{
    try{
      const h = new URLSearchParams(window.location.hash.replace(/^#/, ''))
      const q = new URLSearchParams(window.location.search)
      const t = (h.get('type') || q.get('type') || '').toLowerCase()
      if (t === 'recovery') return
      if (localStorage.getItem('jwt')) router.replace('/')
    }catch{}
  },[router])

  // === –î–ï–ô–°–¢–í–ò–Ø
  async function login() {
    setLoading(true); setMsg('')
    try {
      if (!/^\S+@\S+\.\S+$/.test(email)) throw new Error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")
      if (!pass) throw new Error("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å.")
      const r = await req('token?grant_type=password', { email, password: pass })
      const j = await r.json().catch(() => ({}))
      if (!r.ok) throw new Error(parseAuthError(r.status, j))
      localStorage.setItem('jwt', j.access_token)
      router.replace('/')
    } catch(e:any){ setMsg(e.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞.') }
    finally{ setLoading(false) }
  }

  async function signup() {
    setLoading(true); setMsg('')
    try {
      if (!/^\S+@\S+\.\S+$/.test(email)) throw new Error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")
      if (!pass || pass.length < 6) throw new Error("ÔøΩÔøΩ –ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤.")
      const r = await req('signup', {
        email,
        password: pass,
        email_redirect_to: (SITE?.endsWith('/auth') ? SITE : (SITE + '/auth')),
      })
      const j = await r.json().catch(() => ({}))
      if (!r.ok) throw new Error(parseAuthError(r.status, j))
      setMsg(`üì® –ü–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${email}. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞—Ç–µ–º –≤–æ–π–¥–∏—Ç–µ.`)
    } catch(e:any){ setMsg(e.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.') }
    finally{ setLoading(false) }
  }

  // –±–µ–∑ —É—Ç–µ—á–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
  async function sendResetLink() {
    setLoading(true); setMsg('')
    try {
      if (!/^\S+@\S+\.\S+$/.test(email)) throw new Error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")
      const r = await req('recover',{email,redirect_to: `${SITE}/auth`})
      if (!r.ok) { await r.text().catch(()=> ''); /* –Ω–µ –ø–∞–ª–∏–º –¥–µ—Ç–∞–ª–∏ */ }
      setMsg('üì® –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–∏—Å—å–º–æ –¥–ª—è —Å–±—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.')
    } catch(e:any){ setMsg(e.message || '–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞.') }
    finally{ setLoading(false) }
  }

  async function applyNewPassword() {
    if (!recoveryToken) return setMsg('–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.')
    if (!newPass || newPass !== newPass2) return setMsg('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.')
    setLoading(true); setMsg('')
    try {
      const r = await fetch(`${SUPA}/auth/v1/user`, {
        method:'PUT',
        headers:{'Content-Type':'application/json','apikey': ANON,'Authorization': `Bearer ${recoveryToken}`},
        body: JSON.stringify({ password: newPass })
      })
      const j = await r.json().catch(()=> ({}))
      if(!r.ok) throw new Error(j.error_description||j.message||'–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è')
      localStorage.setItem('jwt', recoveryToken)
      setMsg('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω')
      router.replace('/')
    } catch(e:any){ setMsg(e.message) }
    finally{ setLoading(false) }
  }

  const GOOGLE_URL = "/api/google-login"

  // —Å—Ç–∏–ª–∏
  const box = {background:'#0f172a',border:'1px solid #1f2937',borderRadius:12,padding:20,width:'100%',maxWidth:420,margin:'60px auto'} as const
  const input = {background:'#0b1220',color:'#e5e7eb',border:'1px solid #1f2937',borderRadius:10,padding:'10px 12px',width:'100%',marginBottom:10} as const
  const row  = {display:'flex',gap:8,marginBottom:12} as const
  const btn  = {background:'linear-gradient(90deg,#22d3ee,#3b82f6)',color:'#0b1220',fontWeight:700,border:'none',borderRadius:10,padding:'10px 14px',width:'100%',marginTop:4,cursor:'pointer'} as const
  const tabBtn=(active:boolean)=>({flex:1,borderRadius:8,padding:'8px 10px',border:'1px solid #1f2937',background:active?'#111827':'#0b1220',color:'#e5e7eb',cursor:'pointer'}) as const
  const googleBtn={display:'flex',alignItems:'center',gap:10,justifyContent:'center',marginTop:12,background:'#fff',color:'#111827',borderRadius:10,padding:'10px 14px',textDecoration:'none',fontWeight:700,boxShadow:'0 2px 6px rgba(0,0,0,.25)'} as const

  return (
    <div style={box}>
      <h2 style={{marginTop:0}}>üß† AI SQL Advisor</h2>
      <p style={{opacity:.7,marginTop:-8,marginBottom:20}}>–í—Ö–æ–¥ / –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / –°–±—Ä–æ—Å</p>

      {/* –≠–∫—Ä–∞–Ω —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è (recovery) */}
      {recoveryToken ? (
        <>
          <input style={input} placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" type="password" value={newPass} onChange={e=>setNewPass(e.target.value)} />
          <input style={input} placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" type="password" value={newPass2} onChange={e=>setNewPass2(e.target.value)} />
          <button disabled={loading} onClick={applyNewPassword} style={btn}>{loading ? '‚è≥' : '–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å'}</button>
          {msg && <div style={{marginTop:12,opacity:.9}}>{msg}</div>}
        </>
      ) : (
        <>
          <div style={row}>
            <button onClick={()=>setTab('signin')} style={tabBtn(tab==='signin')}>–í—Ö–æ–¥</button>
            <button onClick={()=>setTab('signup')} style={tabBtn(tab==='signup')}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
            <button onClick={()=>setTab('reset')}  style={tabBtn(tab==='reset')}>–°–±—Ä–æ—Å</button>
          </div>

          {/* –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è */}
          {tab!=='reset' && (
            <>
              <input style={input} placeholder="Email" value={email} onChange={e=>setEmail(e.target.value)} />
              <input style={input} placeholder="–ü–∞—Ä–æ–ª—å" type="password" value={pass} onChange={e=>setPass(e.target.value)} />
              <button disabled={loading} onClick={tab==='signin'?login:signup} style={btn}>
                {loading ? '‚è≥' : tab==='signin' ? '–í–æ–π—Ç–∏' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
              </button>
              {/* –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
              {msg && <div style={{marginTop:12,opacity:.9}}>{msg}</div>}

              <a href={GOOGLE_URL} style={googleBtn} target="_self" rel="noopener">
                <svg style={{width:18,height:18}} viewBox="0 0 48 48" aria-hidden="true">
                  <path fill="#FFC107" d="M43.6 20.5H42V20H24v8h11.3c-1.6 4.7-6 8-11.3 8-6.9 0-12.5-5.6-12.5-12.5S17.1 11 24 11c3.2 0 6.1 1.2 8.3 3.2l5.7-5.7C34.6 5.2 29.6 3 24 3 16 3 9 7.4 6.3 14.7z"/>
                  <path fill="#FF3D00" d="M6.3 14.7l6.6 4.8C14.9 16.5 19 14 24 14c3.2 0 6.1 1.2 8.3 3.2l5.7-5.7C34.6 5.2 29.6 3 24 3 16 3 9 7.4 6.3 14.7z"/>
                  <path fill="#4CAF50" d="M24 45c5.4 0 10.3-1.8 14.1-4.9l-6.5-5.4C29.6 36.5 26.9 37.5 24 37.5c-5.2 0-9.6-3.3-11.2-8.1l-6.6 5.1C8.9 41.1 15.9 45 24 45z"/>
                  <path fill="#1976D2" d="M43.6 20.5H42V20H24v8h11.3c-1.2 3.4-3.8 6.1-7 7.6l6.5 5.4C38.3 39.2 42 32.6 42 24c0-1.3-.1-2.6-.4-3.5z"/>
                </svg>
                <span>Continue with Google</span>
              </a>
            </>
          )}

          {/* –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è */}
          {tab==='reset' && (
            <>
              <input style={input} placeholder="Email" value={email} onChange={e=>setEmail(e.target.value)} />
              <button disabled={loading} onClick={sendResetLink} style={btn}>{loading ? '‚è≥' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É'}</button>
              {msg && <div style={{marginTop:12,opacity:.9}}>{msg}</div>}
            </>
          )}
        </>
      )}
    </div>
  )
}
